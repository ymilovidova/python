
#EASY
# Задача 1:
#Напишите функцию, округляющую полученное произвольное десятичное число до кол-ва знаков (кол-во знаков передается вторым аргументом). Округление должно происходить по математическим правилам (0.6 --> 1, 0.4 --> 0). Для решения задачи не используйте встроенные функции и функции из модуля math.

#Решение:

def my_round(number, ndigits):
    n = "1"+"0"*ndigits
    n = int(n)
    if (number%int(number)) >= (0.5):
        number = (number-(number%int(number)))+1
    number *= n
    number = int(number)
    number /= n
    return number


print(my_round(2.1234567, 5))
print(my_round(2.1999967, 5))
print(my_round(2.9999967, 5))

# Задача 2:
# Дан шестизначный номер билета. Определить, является ли билет счастливым. Решение реализовать в виде функции. Билет считается счастливым, если сумма его первых и последних цифр равны.

#Решение:

def lucky_ticket(ticket_number):
    tripleFirst = 0
    tripleSecond = 0
    if len(str((ticket_number)))<6:
        return ("Введите шестизначный номер билета.")
    for i in (str(ticket_number)[0:3]):
        tripleFirst += int(i)
    for i in (str(ticket_number)[0:3]):
        tripleSecond += int(i)
    if tripleFirst == tripleSecond:
        return ('Билет счастливый!')
    else:
        return ('Билет несчастливый!')



print(lucky_ticket(123006))
print(lucky_ticket(12321))
print(lucky_ticket(436751))

# Normal
# Задача 1:
#Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента. Первыми элементами ряда считать цифры 1 1
#Решение:

def fib (n, m):
	fibList = [1,1]
	for i in range(m-2):
		fibList.append(fibList[-2]+fibList[-1])
	return fibList[(n-1):m]

print (fib(8,9))

# Задача 2:
# Напишите функцию, сортирующую принимаемый список по возрастанию. Для сортировки используйте любой алгоритм (например пузырьковый). Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

def sort_to_max(origin_list):
    returnList = []
    compareList = origin_list
    while len(returnList) < len(origin_list):
        returnList.append(min(compareList))
        compareList.remove(min(compareList))

    return returnList
print (sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4). Определить, будут ли они вершинами параллелограмма.

def parallelogram(a1, a2, a3, a4):
     if abs(a3[0] - a2[0]) == abs(a4[0] - a1[0]) and \
        abs(a2[1] - a1[1]) == abs(a3[1] - a4[1]):
         return True
     retur
